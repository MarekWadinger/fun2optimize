function explainParam(opt_method, opt_param)
    arguments
        opt_method string = ''
        opt_param string = ''
    end

    switch opt_param
    case 't'
        if contains(opt_method, 'gdm')
            disp(['Step size t influences number of iterations. Small ', ...
                  'step size t results in slow convergence. Big step size ', ...
                  'can possibly impair convergence, if step cannot be made ', ...
                  'in the direction of decresing gradient. The absolute ', ...
                  'value of a good step size is dependent on the ', ...
                  'optimization problem itself.'])

        elseif contains(opt_method, 'gdmb') || contains(opt_method, 'newton')
            disp(['Step size t is inversely proportional to the number of ', ...
                  'iterations in backtracking. Small step size t results in ', ...
                  'slow convergence. The absolute value of a good step size ', ...
                  'is dependent on the optimization problem itself.'])
        end

    case 'alpha'
        disp(['Parameter alpha tells our algorithm, how much do we trust ', ...
              'the linear extrapolation. Typically number between 0.01 and 0.3. ', ...
              'It is positively correlated with the number of iterations.', ...
              'Higher alpha means that we update step size less often.'])

    case 'beta'
        disp(['Parameter beta has an influence over number of iterations. ', ...
              'Usually number between 0.1 and 0.8. It represents how much ', ...
              'step size changes when using backtracking.'])
    
    case 'ShrinkRate'
        disp(['Parameter ShrinkRate has an influence over number of iterations. ', ...
              'It tells us how much neighborhood shrinks when new candidate', ...
              'variable is worse than previous one. High value will increase', ...
              'number of iterations since the neghborhood can get too small',...
              'even though ouor optimized variable is still far from optimum.'])

    case 'Temp'
        disp(['Temperature has influence over ability of an algorithm to', ...
              'accept worse optimized parameter value in order to escape ', ...
              'local minima. The influence is direct - higher temperature ', ...
              'increases probability of worse solution being accepted. ', ...
              'It has a tendency to increase number of iterations ', ...
              'in a complicated way.'])

    case 'T_reduction'
        disp(['Temperature reduction represents how fast our algorithm ', ...
              'cools down. This means that it decreases the tendency to ', ...
              'accept worse optimized parameter value in order to allow ', ...
              'convergence.'])
    end